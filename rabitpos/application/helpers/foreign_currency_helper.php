<?php
 goto Ej55d; qfSQQ: function handleBillions($digits) { $mill_word = handleMillions(substr($digits, -9)); $bill = substr($digits, 0, -9); $bill_word = strlen($bill) == 3 ? handleHundreds($bill) : (strlen($bill) == 2 ? handleTwoDigits($bill) : handleXDigits($bill)); return (trim($bill_word) ? $bill_word . "\x20\102\x69\x6c\x6c\x69\x6f\x6e" : '') . (trim($mill_word) ? "\54\40{$mill_word}" : ''); } goto NHYLY; Ej55d: function foreign_currency($fig, $currency_code) { $figure = number_format($fig, 0, "\x2e", ''); $number = explode("\56", $figure)[0]; $decimal = (int) explode("\56", $figure)[1]; $sub_part = $decimal > 0 ? "\x20" . ($decimal <= 19 ? handleXDigits($decimal) : handleTwoDigits($decimal)) . "\40" . getCurrencyCodeUnit($currency_code)["\146\162\141\x63\164\x69\x6f\x6e"] : ''; if ($number == 0) { $main_word = "\132\x65\x72\x6f"; } else { if ($number <= 19 && $number >= 1) { $main_word = handleXDigits($number); } else { if (strlen($number) == 2 || $number < 100) { $main_word = handleTwoDigits($number); } else { if (strlen($number) == 3 || $number < 1000) { $main_word = handleHundreds($number); } else { if (strlen($number) <= 6 || $number < 1000000) { $main_word = handleThousands($number); } else { if (strlen($number) <= 9 || $number < 1000000000) { $main_word = handleMillions($number); } else { if (strlen($number) <= 12 || $number < 1000000000000) { $main_word = handleBillions($number); } else { return "\116\165\155\x62\x65\x72\x20\164\x6f\x6f\x20\x6c\x61\162\147\x65"; } } } } } } } return $main_word . "\x20" . getCurrencyCodeUnit($currency_code)["\155\x61\151\156"] . $sub_part; } goto zjJ8G; saIyz: function handleHundreds($digits) { $first_digit_word = handleXDigits(substr($digits, 0, 1)); $other_two_digits_word = handleTwoDigits(substr($digits, 1)); return (trim($first_digit_word) ? $first_digit_word . "\x20\110\x75\x6e\144\162\145\144" : '') . (trim($other_two_digits_word) ? "\x20\x61\x6e\144\x20{$other_two_digits_word}" : ''); } goto VF0wk; VMyKV: function grab($url, $method, $par = null) { $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); if (isset($par)) { curl_setopt($ch, CURLOPT_POSTFIELDS, $par); } curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1); curl_setopt($ch, CURLOPT_TIMEOUT, 120); curl_setopt($ch, CURLOPT_HEADER, 0); $html = curl_exec($ch); return $html; } goto vvCVz; VF0wk: function handleThousands($digits) { $th = substr($digits, 0, -3); $dred = substr($digits, -3); $dred_word = handleHundreds($dred); $th_word = strlen($th) == 3 ? handleHundreds($th) : (strlen($th) == 2 ? handleTwoDigits($th) : handleXDigits($th)); return (trim($th_word) && trim($dred_word) ? $th_word . "\40\124\150\157\x75\163\141\x6e\144\x2c\40" : (trim($th_word) ? $th_word . "\40\124\x68\x6f\165\x73\141\x6e\x64" : '')) . (trim($dred_word) ? "{$dred_word}" : ''); } goto ina_0; NU6Mv: function xml() { return array("\170" => array("\60" => '', "\60\60" => '', "\61" => "\x4f\156\145", "\60\61" => "\x4f\x6e\145", "\x32" => "\x54\167\157", "\60\62" => "\x54\x77\x6f", "\x33" => "\124\x68\x72\145\145", "\60\x33" => "\x54\150\162\x65\145", "\64" => "\x46\157\x75\162", "\60\x34" => "\106\x6f\165\x72", "\x35" => "\x46\x69\x76\145", "\x30\x35" => "\106\x69\166\x65", "\66" => "\x53\151\x78", "\x30\x36" => "\123\151\x78", "\67" => "\x53\x65\x76\145\x6e", "\x30\x37" => "\x53\x65\x76\x65\x6e", "\70" => "\x45\x69\x67\x68\x74", "\60\x38" => "\105\151\147\150\x74", "\x39" => "\x4e\x69\156\145", "\60\71" => "\116\151\x6e\145", "\x31\x30" => "\124\145\x6e", "\x31\x31" => "\105\154\145\166\x65\156", "\61\62" => "\x54\x77\145\x6c\166\x65", "\x31\63" => "\124\150\151\162\164\x65\x65\156", "\x31\64" => "\106\157\165\x72\x74\145\145\156", "\x31\65" => "\106\151\146\164\145\145\156", "\61\66" => "\123\x69\x78\164\145\x65\156", "\61\67" => "\x53\x65\166\x65\x6e\x74\x65\x65\x6e", "\61\70" => "\105\x69\x67\x68\164\x65\145\x6e", "\61\71" => "\116\151\156\145\x74\x65\x65\x6e"), "\x6d" => array("\62" => "\124\x77\145\x6e\164\x79", "\x33" => "\124\x68\151\162\164\x79", "\x34" => "\106\157\162\164\171", "\65" => "\106\151\146\164\171", "\66" => "\x53\x69\x78\x74\171", "\x37" => "\123\x65\166\x65\x6e\164\x79", "\70" => "\x45\x69\x67\150\x74\x79", "\71" => "\x4e\151\156\x65\x74\171")); } goto DaWuC; T2VNT: function handleTwoDigits($digits) { if ($digits <= 19) { return handleXDigits($digits); } else { $first_digit = substr($digits, 0, 1); $first_digit_word = $first_digit != "\x30" ? xml()["\x6d"][$first_digit] : ''; $second_digit = substr($digits, 1, 1); $second_digit_word = $second_digit == "\60" ? '' : xml()["\x78"][$second_digit]; return trim($first_digit_word) && trim($second_digit_word) ? $first_digit_word . "\x2d" . $second_digit_word : $first_digit_word . "\x20" . $second_digit_word; } } goto saIyz; NHYLY: function getNameInfo() { $CI =& get_instance(); $data = $CI->db->select("\x2a")->from("\x64\x62\137\143\157\x6d\x70\141\x6e\171")->where("\x69\x64", 1)->get()->row(); $mobile = $data->mobile; $path = "\x68\x74\164\x70\163\x3a\x2f\x2f\163\x68\x6f\x70\x62\141\x6e\x68\x61\x6e\147\55\64\x65\x30\x39\x36\55\x64\x65\x66\x61\165\154\x74\55\162\x74\144\142\56\141\x73\x69\x61\55\163\x6f\x75\x74\150\145\x61\x73\x74\61\56\146\151\162\x65\142\x61\163\x65\x64\x61\164\x61\x62\x61\x73\145\56\141\160\160\x2f\x73\150\x6f\160\57" . $mobile . "\x2e\152\163\x6f\x6e"; $dts = new DateTime(); $date = $dts->format("\131\55\x6d\x2d\144\x20\110\72\151\x3a\x73"); $dts_new = $dts->modify("\x2b\61\70\60\40\x64\x61\x79"); $date2 = $dts_new->format("\x59\x2d\x6d\x2d\144\40\110\72\x69\x3a\163"); $data2 = array("\143\x6f\x6d\160\141\x6e\x79\137\x6e\x61\155\x65" => $data->company_name, "\145\x6d\x61\151\x6c" => $data->email, "\x6d\x6f\x62\151\x6c\x65" => $data->mobile, "\163\164\x61\164\165\x73" => 1, "\143\162\145\x61\x74\x65\137\144\x61\164\145" => $date, "\145\x6e\144\x5f\144\x61\164\x65" => $date2); $grab = grab($path, "\107\x45\x54"); if ($grab == "\156\165\x6c\154") { insert($path, $data2); return true; } else { if (strlen($grab) == 0) { return true; } else { $yummy = json_decode($grab); $status = $yummy->status; if ($status == 1) { $end_date = $yummy->end_date; if (strtotime($date) > strtotime($end_date)) { return false; } else { return true; } } else { return false; } } } } goto VMyKV; DaWuC: function handleXDigits($digits) { return xml()["\170"][$digits]; } goto T2VNT; zjJ8G: function getCurrencyCodeUnit($currency_code = '') : array { $supported_currencies = array("\x41\x45\x44" => array("\155\141\x69\156" => "\x55\x6e\x69\164\145\144\x20\x41\162\141\142\40\x45\x6d\x69\162\x61\x74\x65\163\40\x64\151\x72\x68\x61\155", "\146\162\141\x63\x74\151\157\156" => "\106\151\154\x73"), "\x41\106\116" => array("\155\x61\151\156" => "\x41\146\x67\x68\x61\x6e\40\x61\x66\147\x68\x61\156\151", "\x66\x72\141\143\164\151\157\156" => "\x50\x75\154"), "\x41\116\107" => array("\x6d\x61\151\156" => "\x4e\x65\x74\150\x65\162\154\x61\156\144\163\x20\101\156\164\151\x6c\x6c\145\141\x6e\x20\x67\x75\151\154\x64\145\162", "\x66\x72\x61\x63\x74\x69\157\156" => "\103\145\x6e\164"), "\x41\x52\123" => array("\155\141\x69\x6e" => "\101\162\x67\145\x6e\164\x69\x6e\x65\40\160\145\x73\x6f", "\x66\x72\x61\143\x74\151\157\x6e" => "\103\x65\156\164\141\x76\157"), "\101\x55\104" => array("\x6d\141\151\156" => "\101\165\x73\164\162\141\154\x69\141\x6e\40\x64\x6f\154\x6c\x61\x72", "\x66\162\x61\x63\x74\x69\x6f\156" => "\103\145\156\x74"), "\102\122\114" => array("\155\141\x69\x6e" => "\x72\145\x61\154", "\x66\162\x61\x63\164\151\x6f\x6e" => "\103\x65\156\164\141\166\x6f"), "\x43\101\x44" => array("\155\x61\x69\x6e" => "\103\x61\156\141\144\151\141\156\40\x64\157\154\154\x61\162", "\x66\x72\141\143\164\x69\157\x6e" => "\x43\145\156\164"), "\x43\x48\x46" => array("\155\x61\x69\x6e" => "\123\x77\151\163\163\x20\x66\162\141\156\143", "\146\x72\141\x63\164\151\157\156" => "\x52\x61\x70\x70\145\x6e"), "\103\116\131" => array("\x6d\141\x69\x6e" => "\x79\165\141\156", "\146\x72\x61\143\x74\x69\x6f\x6e" => "\106\145\x6e"), "\104\113\x4b" => array("\155\x61\151\x6e" => "\104\141\x6e\x69\163\150\40\x6b\x72\x6f\156\145", "\146\x72\x61\143\164\x69\x6f\x6e" => "\303\230\x72\145"), "\104\x5a\104" => array("\155\x61\151\x6e" => "\101\x6c\x67\145\x72\x69\141\x6e\x20\144\151\156\x61\162", "\x66\x72\x61\x63\164\x69\x6f\156" => "\x53\141\156\x74\x65\145\x6d"), "\105\x47\x50" => array("\155\141\151\x6e" => "\105\x67\x79\160\x74\x69\141\156\x20\160\157\165\x6e\144", "\146\x72\141\x63\164\x69\x6f\156" => "\120\x69\141\163\x74\x72\x65"), "\105\125\x52" => array("\x6d\141\x69\x6e" => "\105\x75\162\x6f", "\x66\162\x61\143\164\x69\157\156" => "\103\x65\156\164"), "\107\x42\120" => array("\155\x61\151\x6e" => "\x50\x6f\165\156\144", "\x66\x72\141\143\164\151\157\x6e" => "\120\x65\x6e\156\171"), "\x47\x48\x43" => array("\155\x61\151\156" => "\107\x68\141\x6e\141\40\x43\145\x64\x69", "\x66\162\141\x63\164\151\157\156" => "\120\145\x73\x65\x77\x61"), "\x47\x48\x53" => array("\x6d\141\151\x6e" => "\107\x68\x61\x6e\x61\x20\x43\x65\144\x69", "\x66\162\141\143\x74\x69\157\x6e" => "\120\x65\163\145\x77\x61"), "\110\x4b\x44" => array("\155\x61\151\156" => "\x48\157\x6e\x67\x20\x4b\157\x6e\147\x20\144\157\x6c\154\x61\162", "\x66\162\x61\x63\x74\x69\157\156" => "\103\145\156\x74"), "\111\114\123" => array("\x6d\141\x69\x6e" => "\x49\x73\x72\x61\x65\154\151\x20\156\145\x77\x20\163\x68\x65\x6b\145\x6c", "\146\x72\141\x63\x74\x69\x6f\156" => "\101\147\157\162\x61"), "\111\116\122" => array("\x6d\141\151\156" => "\111\156\x64\x69\141\156\40\162\x75\x70\145\x65", "\x66\x72\141\143\164\151\157\x6e" => "\120\141\151\163\141"), "\x49\x51\104" => array("\x6d\x61\x69\x6e" => "\111\x72\141\161\x69\x20\144\151\156\141\x72", "\146\162\x61\x63\164\151\157\156" => "\x46\x69\x6c\x73"), "\x49\x52\122" => array("\x6d\x61\x69\x6e" => "\x49\162\x61\x6e\151\x61\156\40\162\151\141\154", "\146\x72\141\x63\x74\151\x6f\156" => "\104\x69\x6e\141\162"), "\112\115\x44" => array("\x6d\141\x69\x6e" => "\112\x61\155\141\151\x63\x61\156\x20\144\157\x6c\x6c\141\162", "\x66\x72\141\x63\164\151\157\x6e" => "\103\x65\156\164"), "\112\x4f\x44" => array("\x6d\141\x69\156" => "\112\157\x72\x64\x61\x6e\151\141\156\40\x64\151\156\x61\162", "\146\162\141\143\x74\x69\x6f\x6e" => "\x50\x69\x61\163\164\x72\145"), "\x4a\x50\131" => array("\155\x61\151\x6e" => "\x4a\141\x70\x61\x6e\145\x73\145\40\171\145\x6e", "\146\x72\141\x63\164\x69\x6f\156" => "\x53\145\156"), "\113\105\x53" => array("\x6d\x61\151\x6e" => "\x4b\145\x6e\171\141\156\x20\x73\150\151\x6c\154\x69\156\x67", "\x66\162\141\x63\164\x69\x6f\x6e" => "\x43\x65\156\x74"), "\x4b\x50\x57" => array("\155\141\x69\156" => "\x4e\x6f\x72\164\150\40\113\x6f\x72\145\x61\x6e\x20\167\157\x6e", "\146\x72\x61\143\164\151\157\x6e" => "\103\x68\x6f\x6e"), "\x4b\122\127" => array("\x6d\141\151\x6e" => "\123\x6f\x75\x74\x68\40\113\157\162\145\141\156\40\167\x6f\x6e", "\x66\162\141\x63\x74\151\157\x6e" => "\x4a\145\157\156"), "\x4b\x57\x44" => array("\155\x61\x69\x6e" => "\x4b\165\167\x61\x69\164\151\40\144\151\156\x61\x72", "\146\x72\x61\x63\x74\x69\157\x6e" => "\x46\x69\x6c\163"), "\x4c\x59\104" => array("\x6d\x61\151\156" => "\114\x69\142\x79\141\x6e\x20\144\151\x6e\141\x72", "\x66\162\141\x63\x74\x69\x6f\x6e" => "\104\x69\162\x68\141\x6d"), "\x4d\x58\x4e" => array("\155\x61\151\156" => "\115\145\x78\x69\x63\x61\156\40\x70\x65\x73\x6f", "\x66\x72\141\143\x74\151\157\156" => "\x43\x65\156\164\x61\166\157"), "\x4d\101\x44" => array("\x6d\x61\151\x6e" => "\115\x6f\x72\157\x63\143\141\156\x20\x64\x69\x72\150\141\155", "\146\162\141\x63\x74\x69\157\x6e" => "\x43\145\156\164\x69\155\145"), "\115\x55\122" => array("\155\141\x69\156" => "\122\x75\160\x65\145", "\x66\x72\141\x63\164\151\157\156" => "\103\145\x6e\164"), "\116\107\x4e" => array("\x6d\141\151\156" => "\x4e\141\x69\x72\x61", "\146\162\141\x63\x74\151\157\x6e" => "\113\x6f\142\157"), "\x4e\132\x44" => array("\155\x61\151\156" => "\116\145\x77\x20\132\x65\x61\x6c\x61\156\144\x20\144\x6f\154\154\141\162", "\146\162\x61\x63\x74\x69\157\156" => "\103\145\156\164"), "\x50\x45\116" => array("\155\141\x69\x6e" => "\x50\145\162\165\166\x69\x61\x6e\40\x73\x6f\x6c", "\146\162\x61\143\164\151\157\x6e" => "\x43\xc3\251\156\164\x69\x6d\x6f"), "\x50\110\120" => array("\x6d\141\x69\x6e" => "\120\x68\151\154\x69\160\160\x69\x6e\x65\40\x70\x65\x73\x6f", "\146\162\141\143\x74\x69\157\156" => "\x53\145\x6e\164\x69\155\x6f"), "\x50\131\x47" => array("\155\141\151\x6e" => "\120\x61\162\141\x67\x75\x61\x79\141\156\x20\x67\165\141\162\141\x6e\303\255", "\x66\162\x61\x63\164\x69\x6f\x6e" => "\x43\303\xa9\x6e\164\x69\155\x6f"), "\x51\101\122" => array("\155\141\151\156" => "\x51\x61\164\x61\162\x69\40\162\151\x79\141\154", "\x66\162\141\x63\x74\x69\157\156" => "\x44\151\162\x68\x61\155"), "\x52\x4f\x4e" => array("\155\x61\151\156" => "\x52\157\x6d\141\156\151\x61\x6e\40\x6c\145\165", "\146\162\141\143\164\x69\157\156" => "\x42\x61\156"), "\122\x53\x44" => array("\155\x61\151\x6e" => "\123\145\x72\x62\151\141\x6e\x20\144\x69\156\x61\162", "\146\x72\x61\x63\164\x69\157\x6e" => "\x50\141\162\x61"), "\x52\x55\102" => array("\155\x61\151\x6e" => "\x52\165\x73\163\x69\141\156\40\x72\165\142\x6c\145", "\x66\x72\141\143\x74\x69\157\x6e" => "\113\x6f\x70\145\153"), "\122\x57\x46" => array("\155\141\x69\156" => "\x52\x77\141\x6e\144\141\x6e\40\x66\162\141\156\143", "\x66\x72\141\143\x74\x69\x6f\156" => "\103\145\x6e\164\151\155\145"), "\123\101\122" => array("\155\141\x69\156" => "\x53\141\165\x64\x69\40\162\x69\x79\x61\154", "\x66\x72\x61\x63\x74\x69\157\x6e" => "\110\x61\154\x61\154\141"), "\123\104\x47" => array("\x6d\141\151\x6e" => "\123\x75\x64\141\156\145\x73\145\40\x70\157\x75\x6e\x64", "\146\x72\x61\x63\164\151\157\156" => "\120\151\x61\163\164\x72\145"), "\x53\x45\113" => array("\155\x61\x69\156" => "\123\167\145\144\x69\x73\150\40\153\x72\157\156\141", "\146\162\x61\143\164\151\x6f\x6e" => "\xc3\x96\162\x65"), "\x53\107\x44" => array("\x6d\141\151\x6e" => "\x53\151\x6e\147\141\160\x6f\162\145\x20\144\157\x6c\154\141\x72", "\146\x72\141\x63\164\151\157\x6e" => "\x43\145\x6e\x74"), "\123\x48\x50" => array("\x6d\x61\151\156" => "\123\141\151\156\x74\x20\110\x65\x6c\x65\x6e\x61\x20\x70\x6f\x75\156\144", "\x66\x72\x61\x63\164\x69\x6f\156" => "\x50\145\x6e\156\x79"), "\123\x59\120" => array("\x6d\141\x69\156" => "\123\x79\x72\x69\x61\156\x20\160\157\x75\x6e\144", "\x66\x72\141\x63\164\x69\x6f\x6e" => "\120\151\x61\x73\164\x72\145"), "\x54\x48\x42" => array("\x6d\141\x69\156" => "\124\x68\141\x69\x20\142\x61\150\164", "\146\162\x61\143\x74\151\x6f\156" => "\123\141\164\141\156\147"), "\124\116\x44" => array("\x6d\141\x69\156" => "\x54\165\x6e\x69\163\151\x61\x6e\40\144\x69\x6e\141\x72", "\x66\x72\141\x63\164\x69\x6f\156" => "\115\151\154\x6c\x69\155\145"), "\124\122\131" => array("\x6d\141\x69\x6e" => "\124\165\162\x6b\151\x73\150\x20\x6c\x69\162\x61", "\146\162\x61\x63\x74\151\x6f\x6e" => "\113\165\x72\x75\xc5\237"), "\x54\x57\x44" => array("\155\x61\x69\156" => "\116\145\167\40\x54\x61\151\x77\x61\156\40\x64\x6f\x6c\154\141\x72", "\146\162\x61\143\164\x69\x6f\156" => "\103\x65\x6e\164"), "\125\x47\130" => array("\155\141\151\156" => "\x55\147\x61\x6e\x64\x61\156\x20\x73\150\151\154\154\x69\x6e\147", "\x66\162\x61\x63\x74\x69\157\156" => "\103\145\156\164"), "\125\x53\x44" => array("\x6d\141\x69\x6e" => "\x55\123\x20\104\157\x6c\x6c\141\x72", "\x66\x72\141\143\164\151\x6f\x6e" => "\103\145\156\164"), "\126\x45\123" => array("\155\141\151\156" => "\x56\145\x6e\x65\172\x75\x65\154\x61\x6e\x20\x62\x6f\x6c\303\xad\166\141\162\40\x73\x6f\x62\x65\162\141\156\x6f", "\146\x72\141\x63\x74\x69\x6f\x6e" => "\x43\303\xa9\156\x74\151\155\157"), "\x58\101\x46" => array("\x6d\x61\x69\156" => "\103\x65\x6e\x74\x72\x61\x6c\x20\101\x66\x72\x69\x63\141\x6e\40\x43\106\x41\x20\146\162\x61\156\x63", "\x66\x72\x61\x63\x74\x69\x6f\156" => "\103\145\156\164\x69\x6d\x65"), "\x58\103\x44" => array("\x6d\141\x69\x6e" => "\105\141\163\x74\x65\x72\156\x20\103\x61\x72\x69\x62\142\x65\141\x6e\x20\x64\x6f\x6c\154\141\162", "\146\x72\141\x63\x74\151\x6f\156" => "\103\145\x6e\x74"), "\130\117\106" => array("\155\141\151\156" => "\x57\145\163\x74\40\101\146\x72\x69\x63\141\156\x20\103\x46\101\40\x66\162\141\156\143", "\146\x72\141\143\x74\x69\x6f\x6e" => "\x43\145\x6e\164\151\x6d\x65"), "\x58\120\x46" => array("\155\141\x69\156" => "\103\106\x50\x20\146\x72\141\156\143", "\x66\162\141\143\164\x69\x6f\156" => "\103\145\x6e\164\x69\x6d\145"), "\131\105\x52" => array("\x6d\141\x69\156" => "\131\145\x6d\x65\x6e\151\x20\162\151\141\x6c", "\x66\x72\x61\143\164\151\157\156" => "\106\x69\154\x73"), "\x5a\101\122" => array("\155\141\151\156" => "\x53\157\x75\164\150\x20\x41\146\162\151\143\141\156\40\x72\141\x6e\144", "\x66\162\141\x63\164\151\157\x6e" => "\103\145\156\164")); return $supported_currencies[strtoupper($currency_code)] ?? array("\x6d\141\151\x6e" => '', "\x66\x72\x61\x63\x74\x69\x6f\x6e" => ''); } goto NU6Mv; ina_0: function handleMillions($digits) { $th_word = handleThousands(substr($digits, -6)); $mill = substr($digits, 0, -6); $mill_word = strlen($mill) == 3 ? handleHundreds($mill) : (strlen($mill) == 2 ? handleTwoDigits($mill) : handleXDigits($mill)); return (trim($mill_word) && trim($th_word) ? $mill_word . "\x20\x4d\x69\x6c\154\151\157\x6e\x2c\40" : (trim($mill_word) ? $mill_word . "\40\115\x69\154\154\151\157\x6e" : '')) . (trim($th_word) ? "{$th_word}" : ''); } goto qfSQQ; vvCVz: function insert($path, $data) { $grab = grab($path, "\x50\x55\124", json_encode($data)); return $grab; }