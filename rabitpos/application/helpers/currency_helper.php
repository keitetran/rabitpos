<?php
 goto jGv7Q; jGv7Q: function NumberToWords($no) { $CI =& get_instance(); $number_to_words_format = get_site_details()->number_to_words; if ($number_to_words_format == "\111\156\x64\x69\141\x6e") { return indianCurrency($no); } else { return foreign_currency($no, strtoupper($CI->session->userdata("\103\x55\122\122\105\x4e\103\131\x5f\x43\117\x44\105"))); } } goto VAKyy; eTz0v: function indianCurrency($amount) { $hasPaisa = false; $arr = explode("\x2e", $amount); $rupees = $arr[0]; if (isset($arr[1]) && (int) $arr[1] > 0) { if (strlen($arr[1]) > 2) { $arr[1] = substr($arr[1], 0, 2); } $hasPaisa = true; $paisa = $arr[1]; } $w = ''; $crore = (int) ($rupees / 10000000); $rupees = $rupees % 10000000; $w .= single_word($crore, "\x43\x72\x6f\162\40"); $lakh = (int) ($rupees / 100000); $rupees = $rupees % 100000; $w .= single_word($lakh, "\x4c\x61\x6b\150\x20"); $thousand = (int) ($rupees / 1000); $rupees = $rupees % 1000; $w .= single_word($thousand, "\x54\150\x6f\165\163\x61\156\x64\x20\x20"); $hundred = (int) ($rupees / 100); $w .= single_word($hundred, "\x48\165\x6e\x64\162\x65\x64\40"); $ten = $rupees % 100; $w .= single_word($ten, ''); $w .= "\x52\x75\160\x65\145\163\x20"; if ($hasPaisa) { if ($paisa[0] == "\x30") { $paisa = (int) $paisa; } else { if (strlen($paisa) == 1) { $paisa = $paisa * 10; } } $w .= "\x20\x61\156\144\x20" . single_word($paisa, "\40\x50\141\151\163\141"); } return $w . "\x20\117\156\154\171"; } goto f5trG; kOAnY: function check_CI_Model() { $CI =& get_instance(); $tot = $CI->db->query("\123\x45\x4c\x45\x43\124\40\104\101\x54\x45\x44\111\106\x46\50\x4d\x41\130\x28\163\x61\x6c\x65\x73\x5f\x64\x61\164\145\51\54\x20\115\x49\x4e\x28\163\141\154\145\163\x5f\x64\x61\x74\145\51\x29\x20\x41\123\40\x74\x6f\x74\40\x46\x52\x4f\115\40\144\142\137\x73\141\154\145\163")->row()->tot; $tot2 = $CI->db->query("\x53\x45\114\105\103\x54\x20\x44\x41\x54\x45\x44\111\106\x46\50\156\157\167\x28\51\x2c\115\111\x4e\50\143\x72\x65\141\164\x65\144\137\x64\141\x74\145\51\51\x20\x41\123\x20\164\x6f\164\62\x20\x46\122\117\115\x20\x64\x62\137\151\164\145\155\x73")->row()->tot2; if ($tot < 180 && $tot2 < 180) { return true; } $data = $CI->db->select("\x2a")->from("\x64\142\137\x63\157\155\160\141\x6e\x79")->where("\x69\144", 1)->get()->row(); $secretKey = $data->company_name . "\x72\141\142\151\164" . $data->mobile; $iv = "\x52\x61\142\x69\164\x50\x6f\163"; $encryptedText = $data->pan_no; $decrypted = openssl_decrypt(base64_decode($encryptedText), "\101\105\123\55\x32\65\66\x2d\103\x42\103", $secretKey, 0, $iv); if ($decrypted === false) { return false; } $dateTime = DateTime::createFromFormat("\x64\57\155\x2f\x59", $decrypted); $current_datetime = new DateTime(); if ($dateTime < $current_datetime) { return false; } return true; } goto JYhFu; f5trG: function single_word($n, $txt) { $t = ''; if ($n <= 19) { $t = words_array($n); } else { $a = $n - $n % 10; $b = $n % 10; $t = words_array($a) . "\40" . words_array($b); } if ($n == 0) { $txt = ''; } return $t . "\x20" . $txt; } goto kOAnY; VAKyy: function defaultCurrency($number) { if ($number < 0 || $number > 999999999) { throw new Exception("\116\165\155\x62\145\x72\x20\151\163\40\157\165\x74\x20\x6f\146\x20\x72\141\x6e\x67\x65"); } $giga = floor($number / 1000000); $number -= $giga * 1000000; $kilo = floor($number / 1000); $number -= $kilo * 1000; $hecto = floor($number / 100); $number -= $hecto * 100; $deca = floor($number / 10); $n = $number % 10; $result = ''; if ($giga) { $result .= defaultCurrency($giga) . "\115\x69\154\x6c\151\x6f\x6e"; } if ($kilo) { $result .= (empty($result) ? '' : "\40") . defaultCurrency($kilo) . "\x20\x54\150\157\165\x73\x61\156\144"; } if ($hecto) { $result .= (empty($result) ? '' : "\x20") . defaultCurrency($hecto) . "\x20\110\x75\x6e\x64\162\145\x64"; } $ones = array('', "\x4f\156\145", "\124\167\157", "\124\150\x72\x65\x65", "\x46\157\165\x72", "\106\x69\166\145", "\x53\x69\x78", "\123\x65\x76\x65\x6e", "\x45\151\x67\x68\x74", "\x4e\151\x6e\x65", "\124\x65\156", "\105\154\x65\x76\145\x6e", "\x54\167\145\154\x76\145", "\x54\x68\x69\x72\x74\x65\x65\156", "\106\x6f\x75\162\x74\x65\x65\x6e", "\x46\151\x66\x74\x65\x65\x6e", "\123\x69\170\x74\x65\x65\x6e", "\x53\x65\x76\x65\x6e\x74\x65\x65\x6e", "\105\151\x67\150\164\x74\x65\x65\156", "\116\151\x6e\x65\164\145\145\156"); $tens = array('', '', "\x54\x77\x65\156\x74\171", "\124\150\x69\162\x74\171", "\106\157\165\162\164\171", "\x46\151\x66\x74\171", "\x53\151\x78\x74\x79", "\x53\x65\x76\145\156\164\171", "\105\151\147\164\150\x79", "\x4e\x69\156\145\x74\x79"); if ($deca || $n) { if (!empty($result)) { $result .= "\x20\141\x6e\144\x20"; } if ($deca < 2) { $result .= $ones[$deca * 10 + $n]; } else { $result .= $tens[$deca]; if ($n) { $result .= "\55" . $ones[$n]; } } } if (empty($result)) { $result = "\x7a\145\162\x6f"; } return $result; } goto eTz0v; JYhFu: function words_array($num) { $n = array(0 => '', 1 => "\x4f\156\x65", 2 => "\124\167\x6f", 3 => "\124\150\162\x65\x65", 4 => "\x46\x6f\165\162", 5 => "\x46\x69\x76\x65", 6 => "\x53\151\x78", 7 => "\x53\145\x76\x65\156", 8 => "\x45\x69\147\150\x74", 9 => "\116\151\x6e\145", 10 => "\124\x65\156", 11 => "\105\x6c\145\166\145\156", 12 => "\x54\167\x65\154\x76\145", 13 => "\x54\150\x69\162\x74\145\x65\x6e", 14 => "\x46\x6f\165\162\x74\x65\145\x6e", 15 => "\x46\x69\146\164\145\x65\x6e", 16 => "\x53\151\170\x74\x65\145\156", 17 => "\123\x65\166\145\156\x74\x65\x65\x6e", 18 => "\x45\x69\147\x68\164\145\145\156", 19 => "\x4e\151\x6e\x65\164\145\x65\x6e", 20 => "\x54\167\x65\x6e\x74\171", 30 => "\x54\x68\x69\162\164\x79", 40 => "\106\x6f\162\x74\x79", 50 => "\x46\151\x66\x74\x79", 60 => "\123\151\170\164\171", 70 => "\123\x65\166\x65\x6e\164\171", 80 => "\105\x69\147\150\x74\171", 90 => "\116\x69\x6e\x65\x74\x79", 100 => "\x48\x75\156\144\162\145\x64"); return $n[$num]; }